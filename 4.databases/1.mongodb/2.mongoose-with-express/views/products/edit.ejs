<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Product</title>
</head>

<body>
    <h1>Edit Product</h1>
    <form action="/products/<%=product._id%>?_method=PUT" method="POST">
        <!-- ?_method=PUT will help us to trick the HTML that the request is POST method but underneath it is a PUT method. -->
        <label for="name">Product Name</label>
        <input type="text" name="name" id="name" placeholder="product name" value="<%=product.name%>">
        <!-- We are using value attribute here so that it will be pre-populated for us to edit -->
        <label for="price">Price (Unit)</label>
        <input type="number" id="price" name="price" placeholder="price" value="<%= product.price %>">
        <label for="category">Select Category</label>
        <select name="category" id="category">
            <% for(let category of categories){ %>
            <option value="<%=category%>" <%= product.category === category ? 'selected': ''%>><%=category%></option>
            <% } %>
            <!-- product.category === category ? 'selected': '' This entire piece of code deals with only thing. Whether selected attribute should be added or not. -->
            <!-- Editing a form should have prefilled values for better user experience based on what the user has already entered. So that they can just go ahead and edit only those part in which they might have entered wrong data -->
            <!-- Prefilling values can be tricky for some form elements like dropdown lists. We have prepopulated the values above quite easily. But with a dropdown list, we cannot assign a value, we can only select a value. -->
            <!-- So what we are doing here is whenever we go to the edit route of a particular product we will compare the prefilled category by the user (which is obtained by product object for which this file have access to - product.category) with category of all the products via for-loop (we have passed both product object and categories array from index.js). Once we get a match, the selected attribute will be added.  -->
        </select>
        <button>Submit</button>
    </form>
    <a href="/products/<%=product._id%>">Cancel</a>

</body>

</html>